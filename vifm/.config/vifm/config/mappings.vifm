" These mappings will switch tmux window when appropriately
" https://github.com/vifm/vifm/issues/708
nnoremap <silent> <c-h> :if paneisat('left')   | execute '!tmux select-pane -L %i' | else | execute 'wincmd h' | endif<cr>
nnoremap <silent> <c-j> :if paneisat('bottom') | execute '!tmux select-pane -D %i' | else | execute 'wincmd j' | endif<cr>
nnoremap <silent> <c-k> :if paneisat('top')    | execute '!tmux select-pane -U %i' | else | execute 'wincmd k' | endif<cr>
nnoremap <silent> <c-l> :if paneisat('right')  | execute '!tmux select-pane -R %i' | else | execute 'wincmd l' | endif<cr>
" account for <c-h>/<bs> conflict
nnoremap <silent> <bs>  :if paneisat('left')   | execute '!tmux select-pane -L %i' | else | execute 'wincmd h' | endif<cr>


" Recover full viewcolumns after leave only one pane
nnoremap <c-w>o :only | :windo set viewcolumns=-{name},6{size},11{perms},9{uname},-8{gname},16{mtime}<cr>
" Recover short viewcolumns after leave only one pane
nnoremap <c-w>O :only | :windo set viewcolumns=-{name},6{size},11{perms},15{mtime}<cr>
" Default viewcolumns with horizontal split
nnoremap <c-w>s :split | :windo set viewcolumns=-{name},6{size},11{perms},9{uname},-8{gname},16{mtime}<cr>
" Default viewcolumns with horizontal split in small window
nnoremap <c-w>S :split | :windo set viewcolumns=-{name},6{size},11{perms},15{mtime}<cr>
" Default viewcolumns with vertical split
nnoremap <c-w>v :vsplit | :windo set viewcolumns=-{name},6{size},11{perms},9{uname},-8{gname},16{mtime}<cr>
nnoremap <c-w>V :vsplit | :windo set viewcolumns=-{name},6{size},11{perms},16{mtime}<cr>

nnoremap <silent> <tab> <c-w> w

" " List all maps in normal mode
" nnoremap <silent><wait> <space>nm :nmap<cr>
" nnoremap <silent><wait> <space>m :nmap<cr>
" " List all maps i<wait>n comma>nd line mode
" nnoremap <silent><wait> <space>cm :cmap<cr>
" cnoremap <silent><wait> <space>m :cmap<cr>
" " List all maps i<wait>n menu >mode
" nnoremap <silent><wait> <space>mm :mmap<cr>
" mnoremap <silent><wait> <space>m :mmap<cr>
" " List all maps i<wait>n view >mode
" nnoremap <silent><wait> <space>qm :qmap<cr>
" qnoremap <silent><wait> <space>m :qmap<cr>
" " List all maps i<wait>n visua>l mode
" nnoremap <silent><wait> <space>vm :vmap<cr>
" vnoremap <silent><wait> <space>m :vmap<cr>
" " List all user c<wait>ommands
" nnoremap <silent><wait> <space>co :command<cr>

" Type commands faster
nnoremap ; :
vnoremap ; :

" cd mapping
nnoremap <wait> cd :zoxide<space>

" zoxide mapping
nnoremap <silent> <space>z :zoxide<space>

" FZF mapping
nnoremap <silent> <a-c> :FZF<cr>

" select mapping (apply select)
nnoremap s :select<space>//<left>

" Mapping for visual selection of all files
nnoremap vv :%select<cr>

" Substitute mapping
nnoremap <silent> r :substitute///<left><left>
vnoremap <silent> r :substitute///<left><left>

" find mapping
nnoremap <silent> <space>f :FZF<cr>
" nnoremap <silent> <space>ff :find<space>

" filter mapping (apply filter)
nnoremap <wait> <space>F :filter<space>//<left>


" Start shell in current directory
nnoremap <silent><wait> S :shell<cr>

" Open console in current directory
"nnoremap <wait> <space>ta :!alacritty &<cr>

" " Display sorting dialog
" nnoremap <silent><wait> <space>so :sort<cr>
" " Sort mappings
" nnoremap <silent><wait> <space>sn :set sort=+iname,dir<cr>
" nnoremap <silent><wait> <space>sN :set sort=-iname,dir<cr>
" nnoremap <silent><wait> <space>st :set sort=-mtime,dir<cr>
" nnoremap <silent><wait> <space>sT :set sort=+mtime,dir<cr>
" nnoremap <silent><wait> <space>ss :set sort=-size,dir<cr>
" nnoremap <silent><wait> <space>sS :set sort=+size,dir<cr>

" Toggle visibility of preview window
nnoremap <silent> w :view<cr>
vnoremap <silent> w :view<cr>gv

" mkdir -p directory
nnoremap <wait> md :md<space>
"nnoremap ;md :mdm<space>
" mkdir && cd to the directory
nnoremap <wait> mc :mc<space>
" Touch file
nnoremap <wait><space>co :touch<space>
" Set the same directory in the other panel
nnoremap <wait> <space>sy :sync<cr>
" Repeat name substitution
nnoremap <wait> <space>su :su<cr>
" Reload config
nnoremap <silent><wait> <space>cr :reload<cr>
" Open nvim to edit vifmrc and apply settings after returning to vifm
nnoremap <silent><wait> <space>ce :write | execute ':!nvim $MYVIFMRC' | restart full<cr>


" rg mapping
nnoremap <silent> <space>g :grep<space>

" Open file in existing instance of gvim
"nnoremap o :!gvim --remote-tab-silent %f<cr>
" Open file always in TUI vim
" nnoremap o :!nvim %f<cr>
" Use special open function defined in .zprofile
nnoremap o :!open %f<cr>
" Open file in new instance of gvim
"nnoremap O :!gvim %f<cr>
" Select program to open the file
nnoremap O :file <space><tab>

" Force file editing
nnoremap i :edit<cr>

" Open with vscode
" nnoremap co :!code %f &<cr>

" Open file in the background using its default program
" nnoremap gb :file &<cr>l

" Yank mappings {{{
" Yank current directory path into the clipboard
nnoremap yd :!echo -n %d | sed 's/ /\\\ /g' | xclip -in -selection clipboard %i<cr>:echo expand('%d') "is yanked to clipboard"<cr>
nnoremap yds :!echo -n %d | xclip -in -selection clipboard %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

" Yank selected paths into the clipboard
nnoremap yp :!printf "%%s\n" %f:p | sed 's/ /\\\ /g' | xclip -in -selection clipboard -rmlastnl %i<cr>:echo expand('%"f:p') "is yanked to clipboard"<cr>
vnoremap yp :!printf "%%s\n" %f:p | sed 's/ /\\\ /g' | xclip -in -selection clipboard -rmlastnl %i<cr>:echo expand('%"f:p') "are yanked to clipboard"<cr>
nnoremap yps :!printf "%%s\n" %f:p | xclip -in -selection clipboard -rmlastnl %i<cr>:echo expand('%"f:p') "is yanked to clipboard"<cr>
vnoremap yps :!printf "%%s\n" %f:p | xclip -in -selection clipboard -rmlastnl %i<cr>:echo expand('%"f:p') "are yanked to clipboard"<cr>

" Yank selected filenames into the clipboard
nnoremap yn :!printf "%%s\n" %f | sed "s/ /\\\ /g" | xclip -in -selection clipboard -rmlastnl %i<cr>:echo expand('%"f') "are yanked to clipboard"<cr>
vnoremap yn :!printf "%%s\n" %f | sed "s/ /\\\ /g" | xclip -in -selection clipboard -rmlastnl %i<cr>:echo expand('%"f') "are yanked to clipboard"<cr>
nnoremap yns :!printf "%%s\n" %f | xclip -in -selection clipboard -rmlastnl %i<cr>:echo expand('%"f') "are yanked to clipboard"<cr>
vnoremap yns :!printf "%%s\n" %f | xclip -in -selection clipboard -rmlastnl %i<cr>:echo expand('%"f') "are yanked to clipboard"<cr>

" Yank selected paths to a GUI file manager picker to be used by web browsers
nnoremap yw :!dragon-drag-and-drop --all --and-exit %f<cr>
vnoremap yw :!dragon-drag-and-drop --all --and-exit %f<cr>

" Yank selected paths to be pasted in a GUI file manager
nnoremap yf :!printf "%%s\n" %f:p | xclip -in -selection clipboard -rmlastnl -t text/uri-list %i<cr>:echo expand('%"f:p') "are yanked as uri to clipboard"<cr>
vnoremap yf :!printf "%%s\n" %f:p | xclip -in -selection clipboard -rmlastnl -t text/uri-list %i<cr>:echo expand('%"f:p') "are yanked as uri to clipboard"<cr>
"}}}

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Mappings for select/unselect
nnoremap t tj
nnoremap T tk

" Mappings for tabs
nnoremap <wait> <space>tt :tabnew<cr>
nnoremap <wait> <space>tn :tabname<space>

" sshfs mapping
" nnoremap <wait><space>ssh :sshfs<space>:<left>

" rsync mapping
" nnoremap <wait> <space>rs :rsync<cr>

" diff mapping
" nnoremap <wait> <space>di :diff<cr>

" df mapping
" nnoremap <wait><space>df :df<cr>

" du mapping
" nnoremap <wait> <space>du :du<cr>

" meld mapping
" nnoremap <wait> <space>me :meld<cr>

" ncdu mapping
" nnoremap <wait> <space>nc :ncdu<cr>

" Toggle wrap setting on ,w key
nnoremap <silent> <space>w :set wrap!<cr>

" extract file mapping
" nnoremap <silent> <space>e :extract<cr>
" compress file mapping
" nnoremap <silent> <space>c :compress <c-x>c<space>

" Use < and > without ctrl-w prefix key in normal mode
nnoremap < <c-w><
nnoremap > <c-w>>

" Moving cursor in another pane
nnoremap <silent> J <space>j<space>
nnoremap <silent> K <space>k<space>

" Use tab as s-tab to change to quick view mode
" nnoremap <tab> <s-tab>

" Tab mappings {{{
" Go to next tab page or move current tab page to position specified by the
" count
nnoremap <silent> gt : <c-u>
                    \| if v:count == 0
                    \|     execute 'normal gt'
                    \| elseif v:count > tabpagenr('$')
                    \|     tabmove
                    \| elseif v:count >= tabpagenr()
                    \|     execute 'tabmove' v:count
                    \| elseif v:count < tabpagenr()
                    \|     execute 'tabmove' v:count - 1
                    \| endif
                    \| <cr>

" Switch to the next tab page
nnoremap <c-n> gt
" Switch to the previous tab page
nnoremap <c-p> gT

nnoremap <space>1 1gt
nnoremap <space>2 2gt
nnoremap <space>3 3gt
nnoremap <space>4 4gt
nnoremap <space>5 5gt
nnoremap <space>6 6gt
nnoremap <space>7 7gt
nnoremap <space>8 8gt
nnoremap <space>9 9gt
nnoremap <space>0 10gt
" }}}

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>
