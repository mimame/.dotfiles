# vim: filetype=i3config

include ./themes/catppuccin-mocha

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>

# Keyboard layout http://askubuntu.com/a/24930 http://askubuntu.com/a/296437
# https://wiki.archlinux.org/index.php/xmodmap
exec_always pkill udiskie; udiskie --notify --smart-tray --notify-command notify-send &
exec dbus-sway-environment
exec configure-gtk
# Enable clipboard manager
exec wl-paste -t text --watch clipman store --no-persist
exec swaync

input "type:keyboard" {
    xkb_layout us
    xkb_variant altgr-intl
}

input "type:touchpad" {
	scroll_method two_finger
	# https://wayland.freedesktop.org/libinput/doc/latest/clickpad-softbuttons.html#clickpad-softbuttons
	click_method button_areas
	drag_lock enabled
  dwt enabled

  natural_scroll enabled
	tap_button_map lrm
  tap enabled
  pointer_accel 1
}

input "type:pointer" {
    # accel_profile flat
    pointer_accel 1
}

# Allow switching between workspaces with left and right swipes
bindgesture swipe:right workspace prev
bindgesture swipe:left workspace next
bindgesture swipe:up focus right
bindgesture swipe:down focus left

# Allow container movements by pinching them
bindgesture pinch:inward+up move up
bindgesture pinch:inward+down move down
bindgesture pinch:inward+left move left
bindgesture pinch:inward+right move right

# Load barriers server
# exec_always pkill barriers; barriers --no-daemon --no-tray --name narnia --enable-crypto --config "$HOME/.config/barrier/barrier.conf" --address ":24800"
#exec_always pkill barrier; barrierc --no-daemon --no-tray --name narnia --enable-crypto '[192.168.1.196]:24800'

exec_always swaymsg -r -q output "*" bg ~/Pictures/unicat.png fill > /dev/null

# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border none
default_floating_border none

# Hide borders
hide_edge_borders both

# Change dynamically the borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

# Always put the windows title on the left
title_align left

# Font for window titles. Will also be used by the bar unless a different font is used in the bar {} block below.
font pango:JetBrainsMonoNL Nerd Font Bold 11

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# Kill focused window
bindsym $mod+Ctrl+q kill

# Kill selected window
bindsym --release $mod+Shift+q exec xkill

# Start a terminal
bindsym $mod+Return exec wezterm

# Fast access to most used programs with Alt key
bindsym $mod+Mod1+b exec blueman-manager
bindsym $mod+Mod1+c exec code
bindsym $mod+Mod1+e exec emote
bindsym $mod+Mod1+f exec floorp
bindsym $mod+Mod1+k exec kitty
bindsym $mod+Mod1+l exec logseq
bindsym $mod+Mod1+o exec obsidian
bindsym $mod+Mod1+p exec pcmanfm
bindsym $mod+Mod1+q exec qutebrowser
bindsym $mod+Mod1+s exec spotify
bindsym $mod+Mod1+Shift+c exec calibre
bindsym $mod+Mod1+Shift+e exec evince
bindsym $mod+Mod1+Shift+f exec flameshot gui
bindsym $mod+Mod1+t exec thunderbird
bindsym $mod+Mod1+v exec vivaldi
bindsym $mod+Mod1+x exec wezterm -e yazi
# Notifications center
bindsym $mod+Mod1+n exec swaync-client -t -sw

# Start rofi launcher
bindsym $mod+d exec rofi -show combi
# Add web searcher launcher
bindsym $mod+Ctrl+w exec rofi -show web
# Add finder launcher
bindsym $mod+Ctrl+f exec rofi -show finder
# Add clipboard manager launcher
bindsym $mod+c exec "clipman pick --tool rofi --err-on-no-selection && wtype -M ctrl -M shift v"

# Player controls
bindsym XF86AudioPlay exec playerctl play-pause && ~/.config/sway/scripts/notification "play-stop_song"
bindsym XF86AudioNext exec playerctl next && ~/.config/sway/scripts/notification "next_song"
bindsym XF86AudioPrev exec playerctl previous && ~/.config/sway/scripts/notification "previous_song"

# No player controls available
bindsym Shift+XF86AudioMute exec playerctl play-pause && ~/.config/sway/scripts/notification "play-stop_song"
bindsym Shift+XF86AudioRaiseVolume exec playerctl next && ~/.config/sway/scripts/notification "next_song"
bindsym Shift+XF86AudioLowerVolume exec playerctl previous && ~/.config/sway/scripts/notification "previous_song"
bindsym $mod+Mod1+Right exec playerctl next && ~/.config/sway/scripts/notification "next_song"
bindsym $mod+Mod1+Left exec playerctl previous && ~/.config/sway/scripts/notification "previous_song"


# Wireplumber controls
exec wpctl set-volume @DEFAULT_SINK@ 0
bindsym $mod+Mod1+Up exec wpctl set-volume @DEFAULT_SINK@ 1%+ -l 1 && ~/.config/sway/scripts/notification "high_sound"
bindsym $mod+Mod1+Down exec wpctl set-volume @DEFAULT_SINK@ 1%- -l 1 && ~/.config/sway/scripts/notification "low_sound"

bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_SINK@ 5%+ -l 1 && ~/.config/sway/scripts/notification "high_sound"
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_SINK@ 5%- -l 1 && ~/.config/sway/scripts/notification "low_sound"
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_SINK@ toggle && ~/.config/sway/scripts/notification "play-mute_sound"

# Screen brightness controls
# exec light -S 10
bindsym XF86MonBrightnessUp exec light -A 5 && ~/.config/sway/scripts/notification "light"
bindsym XF86MonBrightnessDown exec light -U 5 && ~/.config/sway/scripts/notification "light"

# Print Screen controls
bindsym Print exec ~/.config/sway/scripts/screenshot
bindsym Ctrl+Print exec flameshot gui

focus_on_window_activation smart
popup_during_fullscreen smart

# Change window focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Alternatively, use cursor keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Alternatively, use the cursor keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Workspace back and forth (with/without active container)
# Same workspace number to go back to the previous and return to this
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# Split in horizontal orientation
bindsym $mod+Shift+v split h; exec ~/.config/sway/scripts/notification "i3horizontal_tiling"

# Split in vertical orientation
bindsym $mod+v split v; exec ~/.config/sway/scripts/notification "i3vertical_tiling"

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# Change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Toggle sticky
bindsym $mod+Ctrl+s sticky toggle

# Focus the parent container
bindsym $mod+a focus parent

# Workspace names
set $ws1 "1:  "
set $ws2 "2:  "
set $ws3 "3:  "
set $ws4 "4:  "
set $ws5 "5: "
set $ws6 "6: "
set $ws7 "7: "
set $ws8 "8: "
set $ws9 "9: "
set $ws10 "10: "
set $ws11 "11: "
set $ws12 "12: "
set $ws13 "13: "
set $ws14 "14: "
set $ws15 "15: "
set $ws16 "16: "
set $ws17 "17: "
set $ws18 "18: "
set $ws19 "19: "
set $ws20 "20: "
set $ws21 "21: "
set $ws22 "22: "

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+F1 workspace number $ws11
bindsym $mod+F2 workspace number $ws12
bindsym $mod+F3 workspace number $ws13
bindsym $mod+F4 workspace number $ws14
bindsym $mod+F5 workspace number $ws15
bindsym $mod+F6 workspace number $ws16
bindsym $mod+F7 workspace number $ws17
bindsym $mod+F8 workspace number $ws18
bindsym $mod+F9 workspace number $ws19
bindsym $mod+F10 workspace number $ws20
bindsym $mod+F11 workspace number $ws21
bindsym $mod+F12 workspace number $ws22

# Navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace number $ws1; workspace number $ws1
bindsym $mod+Ctrl+2 move container to workspace number $ws2; workspace number $ws2
bindsym $mod+Ctrl+3 move container to workspace number $ws3; workspace number $ws3
bindsym $mod+Ctrl+4 move container to workspace number $ws4; workspace number $ws4
bindsym $mod+Ctrl+5 move container to workspace number $ws5; workspace number $ws5
bindsym $mod+Ctrl+6 move container to workspace number $ws6; workspace number $ws6
bindsym $mod+Ctrl+7 move container to workspace number $ws7; workspace number $ws7
bindsym $mod+Ctrl+8 move container to workspace number $ws8; workspace number $ws8
bindsym $mod+Ctrl+9 move container to workspace number $ws9; workspace number $ws9
bindsym $mod+Ctrl+0 move container to workspace number $ws10; workspace number $ws10
bindsym $mod+Ctrl+F1 move container to workspace number $ws11; workspace number $ws11
bindsym $mod+Ctrl+F2 move container to workspace number $ws12; workspace number $ws12
bindsym $mod+Ctrl+F3 move container to workspace number $ws13; workspace number $ws13
bindsym $mod+Ctrl+F4 move container to workspace number $ws14; workspace number $ws14
bindsym $mod+Ctrl+F5 move container to workspace number $ws15; workspace number $ws15
bindsym $mod+Ctrl+F6 move container to workspace number $ws16; workspace number $ws16
bindsym $mod+Ctrl+F7 move container to workspace number $ws17; workspace number $ws17
bindsym $mod+Ctrl+F8 move container to workspace number $ws18; workspace number $ws18
bindsym $mod+Ctrl+F9 move container to workspace number $ws19; workspace number $ws19
bindsym $mod+Ctrl+F10 move container to workspace number $ws20; workspace number $ws20
bindsym $mod+Ctrl+F11 move container to workspace number $ws21; workspace number $ws21
bindsym $mod+Ctrl+F12 move container to workspace number $ws22; workspace number $ws22

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod+Shift+F1 move container to workspace number $ws11
bindsym $mod+Shift+F2 move container to workspace number $ws12
bindsym $mod+Shift+F3 move container to workspace number $ws13
bindsym $mod+Shift+F4 move container to workspace number $ws14
bindsym $mod+Shift+F5 move container to workspace number $ws15
bindsym $mod+Shift+F6 move container to workspace number $ws16
bindsym $mod+Shift+F7 move container to workspace number $ws17
bindsym $mod+Shift+F8 move container to workspace number $ws18
bindsym $mod+Shift+F9 move container to workspace number $ws19
bindsym $mod+Shift+F10 move container to workspace number $ws20
bindsym $mod+Shift+F11 move container to workspace number $ws21
bindsym $mod+Shift+F12 move container to workspace number $ws22

# Open applications on specific workspaces
assign [class="Wezterm"] number $ws1
assign [class="Vivaldi"] number $ws2
assign [class="Obsidian"] number $ws3
assign [class="Spotify"] number $ws4
# assign [class="floorp"] number $ws2
# for_window [title="^Google Hangouts.*$"] move to workspace number $ws3
# for_window [title="^Hangouts Video Call.*$"] move to workspace number $ws3
# assign [class="Google-chrome"] number $ws2
# for_window [class="Spotify"] move to workspace number $ws5
# assign [class="Thunderbird"] number $ws3
# assign [class="Slack"] number $ws3
# assign [class="Zotero"] number $ws4
# for_window [title="^Spotify"] move to workspace number $ws0

# Start programs by default
exec wezterm
# exec vivaldi
# exec vivaldi --private-window
# exec obsidian
# exec spotify


# Open specific applications in floating mode
#for_window [class="^.*"] border pixel 1
#for_window [title="i3_help"] floating enable sticky enable border normal
for_window [title="Qalculate!"] floating enable, resize set 800 800

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# inhibit_idle if there are windows in fullscreen mode
for_window [class=".*"] inhibit_idle fullscreen
for_window [app_id=".*"] inhibit_idle fullscreen

# Reload the configuration file
bindsym $mod+Shift+c reload

# Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Interactive menu: close windows, lock, exit switch user, sunspend, hibernate, reboot, restore session and shutdown
set $mode_system (c)lose windows, (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {

    bindsym c exec wlrctl window list | cut -f1 -d':' | xargs -I% wlrctl window close %, mode "default"
    bindsym l exec swaylock, mode "default"
    bindsym e exec swaymsg exit, mode "default"
    bindsym s exec systemctl suspend-then-hibernate, mode "default"
    bindsym h exec systemctl hibernate, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym Shift+s exec systemctl poweroff -i, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+q mode "$mode_system"

# Resize window (use also the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode
  # Pressing left will shrink the window’s width.
  bindsym h resize shrink width 5 px or 5 ppt
  # Pressing right will grow the window’s width.
  bindsym l resize grow width 5 px or 5 ppt
  # Pressing up will shrink the window’s height.
  bindsym k resize shrink height 5 px or 5 ppt
  # Pressing down will grow the window’s height.
  bindsym j resize grow height 5 px or 5 ppt

  # same bindings, but for the arrow keys
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Down resize grow height 10 px or 10 ppt
  bindsym Up resize shrink height 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt

  # exit resize mode: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

# Tokyonight Moon (https://github.com/folke/tokyonight.nvim/blob/main/extras/wezterm/tokyonight_moon.toml)
set $fg     #c8d3f5
set $red    #ff757f
set $orange #ff966c
set $base   #1e2030



# Focus colors
# target                 title     bg    text   indicator  border
client.focused           $lavender $base $text  $rosewater $lavender
client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
client.unfocused         $overlay0 $base $text  $rosewater $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

# Autostart applications
# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec nm-applet
exec dropbox

# Toggle (show/hide) i3status-rs bar
bindsym $mod+m bar mode toggle

bar {
  # Hide bar by default, show with modifier key
  mode hide
  # Top by default
  position top
  status_command i3status-rs
  #	wheel_up_cmd nop
  #	wheel_down_cmd nop
  colors {
    background         $base
    statusline         $text
    focused_statusline $text
    focused_separator  $base
    focused_workspace  $base $base $green
    active_workspace   $base $base $blue
    inactive_workspace $base $base $surface1
    urgent_workspace   $base $base $surface1
    binding_mode       $base $base $surface1
  }
}

# Init programs in specific workspaces
# It's necessary wait until each window is shown in its workspace
# before run the next one
